{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "eslint-plugin-import-helpers"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "rules": {
    // Possible Errors
    "no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "no-case-declarations": "off",
    "no-debugger": "error",
    "no-constant-condition": "error",
    "no-cond-assign": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-empty": "error",
    "no-empty-character-class": "error",
    "no-func-assign": "error",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-promise-executor-return": "error",
    "no-regex-spaces": "error",
    "no-sparse-arrays":"error",
    "no-template-curly-in-string": "error",
    "no-unexpected-multiline": "error",
    "no-unreachable": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "require-atomic-updates": "error",
    "use-isnan": "error",
    //Good Practices
    "accessor-pairs": "error",
    "array-callback-return": "warn",
    "block-scoped-var": "error",
    "class-methods-use-this": "error",
    "consistent-return": "error",
    "curly": "error",
    "default-case": "error",
    "eqeqeq": "error",
    "grouped-accessor-pairs": "error",
    "no-alert": "error",
    "no-caller": "error",
    "no-constructor-return": "error",
    "no-empty-function": "error",
    "no-empty-pattern": "error",
    "no-eq-null": "error",
    "no-eval": "error",
    "no-extra-bind": "error",
    "no-extra-label": "error",
    "no-fallthrough": "error",
    "no-floating-decimal": "error",
    "no-global-assign": "error",
    "no-implicit-globals": "error",
    "no-implied-eval": "error",
    "no-iterator": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-loop-func": "error",
    "no-magic-numbers": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-new": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-proto": "error",
    "no-redeclare": "error",
    "no-restricted-properties": "error",
    "no-return-assign": "error",
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-assign": "error",
    "no-sequences": "error",
    "no-throw-literal": "error",
    "no-unmodified-loop-condition": "error",
    "no-unused-labels": "error",
    "no-useless-catch": "error",
    "no-useless-concat": "error",
    "prefer-promise-reject-errors": "error",
    "radix": "error",
    "vars-on-top": "error",
    "wrap-iife": "warn",
    "yoda": "error",
    // Variables
    "init-declarations": "error",
    "no-delete-var": "error",
    "no-undef-init": "error",
    // Stylistic Issues
    "array-bracket-newline": ["error", { "multiline": true }],
    "array-bracket-spacing": "error",
    "block-spacing": "error",    
    "brace-style": "error",
    "camelcase": "error",
    "capitalized-comments": "error",
    "comma-spacing": ["error", {"before": false}],
    "computed-property-spacing": "error",
    "consistent-this": "error",
    "func-call-spacing": "error",
    "func-names": "error",
    "implicit-arrow-linebreak": "error",
    "jsx-quotes": ["error", "prefer-double"],
    "key-spacing": ["error", {"beforeColon": false}],
    "keyword-spacing": ["error", {"before": true}],
    "line-comment-position": ["error", { "position": "above" }],
    "lines-around-comment": ["error", { "beforeBlockComment": true }],
    "lines-between-class-members": ["error", "always"],
    "max-len": ["error", {"code": 100}],
    "max-params": ["error", 5],
    "max-statements-per-line": ["error", {"max": 2}],
    "multiline-comment-style": ["error", "starred-block"],
    "multiline-ternary": ["error", "never"],
    "new-cap": ["error", { "newIsCap": true }],
    "new-parens": "error",
    "newline-per-chained-call": "error",
    "no-inline-comments": "error",
    "no-lonely-if": "error",
    "no-mixed-operators": "error",
    "no-mixed-spaces-and-tabs": "error",
    "no-multi-assign": "error",
    "no-multiple-empty-lines": "error",
    "no-nested-ternary": "error",
    "no-tabs": "error",
    "no-trailing-spaces": "error",
    "no-unneeded-ternary": "error",
    "no-whitespace-before-property": "error",
    "operator-assignment": ["error", "always"],
    "operator-linebreak": ["error", "after"],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*"},
      { "blankLine": "any",    "prev": ["const", "let", "var"], "next": ["const", "let", "var"]}
    ],
    "prefer-exponentiation-operator": "error",
    "prefer-object-spread": "error",
    "quote-props": ["error", "as-needed"],
    "quotes": ["error", "single"],
    "semi": ["error", "never"],
    "semi-spacing":"error",
    "space-before-blocks": "error",
    "space-before-function-paren": ["error", "never"],
    "space-in-parens": "error",
    "spaced-comment": ["error", "always"],
    "switch-colon-spacing": "error",
    "template-tag-spacing": "error",
    "unicode-bom": ["error", "never"],
    "wrap-regex": "error",
    // ECMAScript 6
    "arrow-parens": ["error", "always"],
    "arrow-spacing": "error",
    "generator-star-spacing": ["error", {"before": false, "after": true}],
    "no-confusing-arrow": "error",
    "no-const-assign": "error",
    "no-dupe-class-members": "error",
    "no-duplicate-imports": "error",
    "no-this-before-super": "error",
    "no-useless-constructor": "error",
    "prefer-destructuring": "warn",
    "prefer-template": "error",
    "require-yield": "error",
    "rest-spread-spacing": ["error", "never"],
    //
    "import-helpers/order-imports": [
      "error",
      {
          "newlinesBetween": "always",
          "groups": [
              "/^react/",
              "module",
              "/^~\/data\/hooks/",
              "/^~\/data\/services/",
              "/^~\/data\/store/",
              "/^~\/ui\/providers/",
              "/^~\/ui\/routes/",
              "/^~\/ui\/components/",
              ["parent", "sibling", "index"]
          ],
          "alphabetize": { "order": "asc", "ignoreCase": true }
      }
    ]
  }
}